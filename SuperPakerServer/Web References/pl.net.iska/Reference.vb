'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace pl.net.iska
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ecommerce_Model_ApiBinding", [Namespace]:="https://iska.net.pl/ecommerce/api/index")>  _
    Partial Public Class ecommerce_Model_ApiService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private supplyOpenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private supplyCloseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private supplySetProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SuperPakerServer.My.MySettings.Default.SuperPakerServer_pl_net_iska_ecommerce_Model_ApiService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event supplyOpenCompleted As supplyOpenCompletedEventHandler
        
        '''<remarks/>
        Public Event supplyCloseCompleted As supplyCloseCompletedEventHandler
        
        '''<remarks/>
        Public Event supplySetProductCompleted As supplySetProductCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://iska.net.pl/ecommerce/api/index#supplyOpen", RequestNamespace:="https://iska.net.pl/ecommerce/api/index", ResponseNamespace:="https://iska.net.pl/ecommerce/api/index")>  _
        Public Function supplyOpen(ByVal id As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("supplyOpen", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub supplyOpenAsync(ByVal id As Integer)
            Me.supplyOpenAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub supplyOpenAsync(ByVal id As Integer, ByVal userState As Object)
            If (Me.supplyOpenOperationCompleted Is Nothing) Then
                Me.supplyOpenOperationCompleted = AddressOf Me.OnsupplyOpenOperationCompleted
            End If
            Me.InvokeAsync("supplyOpen", New Object() {id}, Me.supplyOpenOperationCompleted, userState)
        End Sub
        
        Private Sub OnsupplyOpenOperationCompleted(ByVal arg As Object)
            If (Not (Me.supplyOpenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent supplyOpenCompleted(Me, New supplyOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://iska.net.pl/ecommerce/api/index#supplyClose", RequestNamespace:="https://iska.net.pl/ecommerce/api/index", ResponseNamespace:="https://iska.net.pl/ecommerce/api/index")>  _
        Public Function supplyClose(ByVal id As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("supplyClose", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub supplyCloseAsync(ByVal id As Integer)
            Me.supplyCloseAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub supplyCloseAsync(ByVal id As Integer, ByVal userState As Object)
            If (Me.supplyCloseOperationCompleted Is Nothing) Then
                Me.supplyCloseOperationCompleted = AddressOf Me.OnsupplyCloseOperationCompleted
            End If
            Me.InvokeAsync("supplyClose", New Object() {id}, Me.supplyCloseOperationCompleted, userState)
        End Sub
        
        Private Sub OnsupplyCloseOperationCompleted(ByVal arg As Object)
            If (Not (Me.supplyCloseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent supplyCloseCompleted(Me, New supplyCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://iska.net.pl/ecommerce/api/index#supplySetProduct", RequestNamespace:="https://iska.net.pl/ecommerce/api/index", ResponseNamespace:="https://iska.net.pl/ecommerce/api/index")>  _
        Public Function supplySetProduct(ByVal id As Integer, ByVal supply_id As Integer, ByVal sku As String, ByVal bloz As Integer, ByVal ean As String, ByVal amount As Single) As <System.Xml.Serialization.SoapElementAttribute("return")> Boolean
            Dim results() As Object = Me.Invoke("supplySetProduct", New Object() {id, supply_id, sku, bloz, ean, amount})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub supplySetProductAsync(ByVal id As Integer, ByVal supply_id As Integer, ByVal sku As String, ByVal bloz As Integer, ByVal ean As String, ByVal amount As Single)
            Me.supplySetProductAsync(id, supply_id, sku, bloz, ean, amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub supplySetProductAsync(ByVal id As Integer, ByVal supply_id As Integer, ByVal sku As String, ByVal bloz As Integer, ByVal ean As String, ByVal amount As Single, ByVal userState As Object)
            If (Me.supplySetProductOperationCompleted Is Nothing) Then
                Me.supplySetProductOperationCompleted = AddressOf Me.OnsupplySetProductOperationCompleted
            End If
            Me.InvokeAsync("supplySetProduct", New Object() {id, supply_id, sku, bloz, ean, amount}, Me.supplySetProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnsupplySetProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.supplySetProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent supplySetProductCompleted(Me, New supplySetProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub supplyOpenCompletedEventHandler(ByVal sender As Object, ByVal e As supplyOpenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class supplyOpenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub supplyCloseCompletedEventHandler(ByVal sender As Object, ByVal e As supplyCloseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class supplyCloseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub supplySetProductCompletedEventHandler(ByVal sender As Object, ByVal e As supplySetProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class supplySetProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
